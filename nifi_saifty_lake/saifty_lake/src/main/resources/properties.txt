drop view if exists  ehs_null_tables.sta_v_null_prop_header;
drop view if exists  saifty_1_staging.STA_V_CLEAN_prop_header;
drop view if exists  saifty_1_staging.STA_V_SOURCE_prop_header;
drop view if exists  ehs_null_tables.sta_v_null_prop_data;
drop view if exists  saifty_1_staging.STA_V_CLEAN_prop_data;
drop view if exists  saifty_1_staging.STA_V_SOURCE_prop_data;
drop view if exists  ehs_null_tables.sta_v_null_sub_header;
drop view if exists  saifty_1_staging.STA_V_CLEAN_SUB_HEADER;
drop view if exists  saifty_1_staging.STA_V_SOURCE_SUB_HEADER;
drop view if exists  ehs_null_tables.sta_v_null_PROP_VAL;
drop view if exists  saifty_1_staging.STA_V_CLEAN_PROP_VAL;
drop view if exists  saifty_1_staging.STA_V_SOURCE_PROP_VAL;
drop view if exists  saifty_1_staging.STA_V_TMP_PROP_VAL;
drop view if exists  ehs_null_tables.sta_v_null_prop_usage;
drop view if exists  saifty_1_staging.sta_v_clean_prop_usage;
drop view if exists  saifty_1_staging.STA_V_SOURCE_PROP_USAGE;
drop view if exists  saifty_1_staging.STA_V_LOGIC_PROPERTIES;
drop view if exists  saifty_1_staging.STA_V_USE_PROPERTIES;

CREATE VIEW ehs_null_tables.sta_v_null_prop_usage
as
select
nullif(`function`, '') `function`,
nullif(LOGLOCKMOD, '') LOGLOCKMOD,
nullif(EXTINFO, '') EXTINFO,
cast(nullif(cast(PRIMARYKEY as string),'')as int) PRIMARYKEY,
cast(nullif(cast(FOREIGNKEY as string),'')as int) FOREIGNKEY,
cast(nullif(cast( FLGPRIMKEY as string),'')as int)  FLGPRIMKEY,
cast(nullif(cast(FLGFRGNKEY as string),'')as int) FLGFRGNKEY,
nullif(CLIENT , '') CLIENT,
cast(nullif(cast(RECORD_NO as string),'')as int) RECORD_NO,
nullif(CHNGSTATUS , '') CHNGSTATUS,
nullif(VALID_FROM , '') VALID_FROM,
nullif(VALID_TO , '') VALID_TO,
nullif(chang_no, '') chang_no,
nullif(DEL_IND, '') DEL_IND,
nullif(PARK_IND , '') PARK_IND ,
nullif(created_on, '') created_on,
nullif(CREATED_BY, '') CREATED_BY,
nullif(changd_on, '') changd_on,
nullif(CHANGD_BY, '') CHANGD_BY,
nullif(DATAORIGIN, '') DATAORIGIN,
nullif(DATA_PROV , '') DATA_PROV ,
cast(nullif(cast(RECNO_ROOT as string),'')as int) RECNO_ROOT,
nullif(MASTERTABL, '') MASTERTABL,
cast(nullif(cast(REF_RECN as string),'')as int) REF_RECN,
nullif(RATING, '') RATING,
nullif(VAL_AREA, '') VAL_AREA,
nullif(ACT_IND, '') ACT_IND,
nullif(REL_IND, '') REL_IND,
nullif(EXCL_IND, '') EXCL_IND,
cast(nullif(cast(REF_RECNRH as string),'')as int) REF_RECNRH,
nullif(inserted, '') copied,
nullif(inserted, '') inserted
from ehs_base_tables.prop_usage;


CREATE view  saifty_1_staging.sta_v_clean_prop_usage
as
select
  	  	"sys" as SYSTEM,
  	  	 `function`,
  	  	 LOGLOCKMOD,
  	  	 EXTINFO,
  	  	PRIMARYKEY,
  	  	FOREIGNKEY,
  	  	 FLGPRIMKEY,
  	  	 FLGFRGNKEY,
  	  	 CLIENT,
  	  	RECORD_NO,
  	  	 CHNGSTATUS,
  	  	cast(substring(from_unixtime(unix_timestamp(VALID_FROM, 'yyyy-MM-dd')),1,10) as DATE) VALID_FROM,
  	  	cast(substring(from_unixtime(unix_timestamp(VALID_TO, 'MM/dd/yyyy')),1,10) as DATE) VALID_TO,
  	  	 CHANG_NO,
  	  	 DEL_IND,
  	  	 PARK_IND,
  	  	cast(substring(from_unixtime(unix_timestamp(Created_on,  'MM/dd/yyyy')),1,10) as DATE) Created_on,
  	  	 CREATED_BY,
  	  	cast(substring(from_unixtime(unix_timestamp(changd_on,  'MM/dd/yyyy')),1,10) as DATE) changd_on,
  	  	 CHANGD_BY,
  	  	DATAORIGIN,
  	  	 DATA_PROV,
  	  	RECNO_ROOT,
  	  	 MASTERTABL,
  	  	cast(REPLACE(LTRIM(REPLACE(REF_RECN,'0', ' ')),' ', '0') as int) REF_RECN,
  	  	 RATING,
  	  	 VAL_AREA,
  	  	ACT_IND,
  	  	REL_IND,
  	  	EXCL_IND,
  	  	REPLACE(LTRIM(REPLACE(REF_RECNRH,'0', ' ')),' ', '0') REF_RECNRH,
  	  	cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) COPIED,
  	  	cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) inserted
  	  	from ehs_null_tables.sta_v_null_prop_usage
  	  	WHERE
  	  	PRIMARYKEY IS NOT NULL AND
  	  	RECORD_NO IS NOT NULL
  	  	AND VALID_FROM IS NOT NULL;

CREATE view saifty_1_staging.STA_V_SOURCE_PROP_USAGE
AS
select distinct SYSTEM,`FUNCTION`,LOGLOCKMOD,EXTINFO,PRIMARYKEY,FOREIGNKEY,FLGPRIMKEY,FLGFRGNKEY,
CLIENT,RECORD_NO,CHNGSTATUS,VALID_FROM,VALID_TO,
CHANG_NO,DEL_IND,PARK_IND,CREATED_ON,CREATED_BY,
CHANGD_ON,CHANGD_BY,DATAORIGIN,DATA_PROV,
RECNO_ROOT, MASTERTABL, REF_RECN, RATING,
VAL_AREA, EXCL_IND, ACT_IND, REL_IND,
REF_RECNRH, INSERTED,
COPIED
from saifty_1_staging.STA_V_CLEAN_PROP_USAGE;

CREATE view ehs_null_tables.sta_v_null_prop_data
AS
select
nullif(`function`, '') `function`,
nullif(LOGLOCKMOD, '') LOGLOCKMOD,
nullif(EXTINFO, '') EXTINFO,
cast(nullif(cast(PRIMARYKEY as string),'')as int) PRIMARYKEY,
cast(nullif(cast(FOREIGNKEY as string),'')as int) FOREIGNKEY,
cast(nullif(cast( FLGPRIMKEY as string),'')as int)  FLGPRIMKEY,
cast(nullif(cast(FLGFRGNKEY as string),'')as int) FLGFRGNKEY,
nullif(OBJ_TYPE, '')  OBJ_TYPE,
nullif(OBJ_KEY, '')  OBJ_KEY,
nullif( INT_CHAR, '')  INT_CHAR,
nullif(NAME_CHAR, '')  NAME_CHAR,
nullif(DESCR_CHAR, '') DESCR_CHAR,
nullif(COUNTER, '') COUNTER,
nullif(char_value, '') char_value,
nullif(DESCR_CVAL, '')  DESCR_CVAL,
nullif(NUM_VAL_FM, '')  NUM_VAL_FM,
nullif(MEAS_UNIT1, '') MEAS_UNIT1,
nullif(ISOCODE1, '') ISOCODE1,
nullif(NUM_VAL_TO, '') NUM_VAL_TO,
nullif(MEAS_UNIT2, '')  MEAS_UNIT2,
nullif(ISOCODE2, '')  ISOCODE2,
nullif(VAL_RELATN, '') VAL_RELATN,
nullif(TOLER_FROM, '') TOLER_FROM,
nullif(TOLER_TO,  '') TOLER_TO,
nullif(PERCENTAGE, '')  PERCENTAGE,
nullif(OPER_INC, '') OPER_INC,
nullif(ALLOC_NO, '') ALLOC_NO,
nullif(DOC_TYPE, '') DOC_TYPE,
nullif(DOC_NUMBER, '') DOC_NUMBER,
nullif(DOC_VER, '') DOC_VER,
nullif( DOC_PART, '')  DOC_PART,
nullif(SUB_VALUES, '') SUB_VALUES,
nullif(SORT_FIELD, '') SORT_FIELD,
cast(nullif(cast(RECNO_ROOT as string),'')as int) RECNO_ROOT,
nullif(REF_RECNRH,'') REF_RECNRH,
nullif(FLAG,'') FLAG,
nullif(REF_RECNPH,'') REF_RECNPH,
nullif(FLG_VALFIX_DESCR,'') FLG_VALFIX_DESCR,
nullif(inserted, '') copied,
nullif(inserted, '') inserted
from ehs_base_tables.prop_data
where
PRIMARYKEY IS NOT NULL AND
CHAR_VALUE is not null;

CREATE view saifty_1_staging.sta_v_clean_prop_data
AS
select
"sys" as SYSTEM,
  `function`,
 LOGLOCKMOD,
 EXTINFO,
PRIMARYKEY,
FOREIGNKEY,
 FLGPRIMKEY,
 FLGFRGNKEY,
 OBJ_TYPE,
REPLACE(LTRIM(REPLACE(COALESCE(substr(OBJ_KEY,1,length(OBJ_KEY)-20),0), '0', ' ')), ' ', '0') OBJ_KEY,
nvl(COALESCE( TRIM (TRANSLATE(INT_CHAR,'0123456789','          ')), NULL, INT_CHAR,0),0) INT_CHAR,
 NAME_CHAR,
 DESCR_CHAR,
 COUNTER,
--nvl(COALESCE( TRIM (TRANSLATE(COUNTER,'0123456789','          ')), NULL, COUNTER,0),0) COUNTER,
case when (flag = 'X') then SUBSTR(char_value, 1,INSTR(char_value,'-'))||REGEXP_REPLACE(SUBSTR(char_value,INSTR(char_value,'-')+1,length(char_value)-INSTR(char_value,'-')), '\-', '#') end CHAR_VALUE,
 DESCR_CVAL,
 NUM_VAL_FM,
 MEAS_UNIT1,
 ISOCODE1,
 NUM_VAL_TO,
 MEAS_UNIT2,
 ISOCODE2,
 VAL_RELATN,
 TOLER_FROM,
 TOLER_TO,
 PERCENTAGE,
 OPER_INC,
REPLACE(LTRIM(REPLACE(ALLOC_NO,'0', ' ')),' ', '0') ALLOC_NO,
 DOC_TYPE,
 DOC_NUMBER,
 DOC_VER,
 DOC_PART,
 SUB_VALUES,
REPLACE(LTRIM(REPLACE(SORT_FIELD,'0', ' ')),' ', '0') SORT_FIELD,
cast(REPLACE(LTRIM(REPLACE(RECNO_ROOT, '0', ' ')),' ', '0') as int) RECNO_ROOT,
REPLACE(LTRIM(REPLACE(REF_RECNRH, '0', ' ')),' ', '0') REF_RECNRH,
nullif(FLAG,'') FLAG,
REPLACE(LTRIM(REPLACE(REF_RECNPH, '0', ' ')),' ', '0') REF_RECNPH,
FLG_VALFIX_DESCR,
cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) COPIED,
cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) inserted
from ehs_null_tables.sta_v_null_prop_data
where
PRIMARYKEY IS NOT NULL AND
CHAR_VALUE is not null;



CREATE VIEW saifty_1_staging.STA_V_SOURCE_PROP_DATA
AS
select distinct  SYSTEM,`FUNCTION`,LOGLOCKMOD,EXTINFO,PRIMARYKEY,FOREIGNKEY,FLGPRIMKEY,FLGFRGNKEY,OBJ_TYPE,OBJ_KEY,INT_CHAR,NAME_CHAR,DESCR_CHAR,COUNTER,CHAR_VALUE,DESCR_CVAL,NUM_VAL_FM,MEAS_UNIT1,ISOCODE1,NUM_VAL_TO,MEAS_UNIT2,ISOCODE2,VAL_RELATN,TOLER_FROM,TOLER_TO,PERCENTAGE,OPER_INC,ALLOC_NO,DOC_TYPE,DOC_NUMBER,DOC_VER,DOC_PART,SUB_VALUES,SORT_FIELD,RECNO_ROOT,REF_RECNRH,FLAG,REF_RECNPH,FLG_VALFIX_DESCR,INSERTED
,COPIED
from saifty_1_staging.STA_V_CLEAN_PROP_DATA;


CREATE VIEW ehs_null_tables.sta_v_null_sub_header
as
select
nullif(`function`, '') `function`,
nullif(LOGLOCKMOD, '') LOGLOCKMOD,
nullif(EXTINFO, '') EXTINFO,
cast(nullif(cast(PRIMARYKEY as string),'')as int) PRIMARYKEY,
cast(nullif(cast(FOREIGNKEY as string),'')as int) FOREIGNKEY,
cast(nullif(cast( FLGPRIMKEY as string),'')as int)  FLGPRIMKEY,
cast(nullif(cast(FLGFRGNKEY as string),'')as int) FLGFRGNKEY,
nullif(CLIENT , '') CLIENT,
cast(nullif(cast(RECORD_NO as string),'')as int) RECORD_NO,
nullif(CHNGSTATUS , '') CHNGSTATUS,
nullif(VALID_FROM , '') VALID_FROM,
nullif(VALID_TO , '') VALID_TO,
nullif(chang_no, '') chang_no,
nullif(DEL_IND, '') DEL_IND,
nullif(PARK_IND , '') PARK_IND ,
nullif(created_on, '') created_on,
nullif(CREATED_BY, '') CREATED_BY,
nullif(changd_on, '') changd_on,
nullif(CHANGD_BY, '') CHANGD_BY,
nullif(DATAORIGIN, '') DATAORIGIN,
nullif(DATA_PROV , '') DATA_PROV ,
cast(nullif(cast(RECNO_ROOT as string),'')as int) RECNO_ROOT,
nullif(SUB_CHGDON , '') SUB_CHGDON,
nullif(SUB_CHGDBY , '') SUB_CHGDBY,
nullif(SUBSTANCE , '') SUBSTANCE,
nullif(SUBCATEGRY , '') SUBCATEGRY,
nullif(SUBAUTHGRP , '') SUBAUTHGRP,
nullif(NOTE , '') NOTE,
nullif(SUBCHARACT , '') SUBCHARACT,
nullif(inserted, '') copied,
nullif(inserted, '') inserted
from
ehs_base_tables.sub_header;

CREATE view saifty_1_staging.STA_V_CLEAN_SUB_HEADER
AS
select
  	  	"sys" as `SYSTEM`,
  	  	`sta_v_null_sub_header`.`function`,
  	  	`sta_v_null_sub_header`.`loglockmod`,
  	  	`sta_v_null_sub_header`.`extinfo`,
  	  	`sta_v_null_sub_header`.`primarykey`,
  	  	`sta_v_null_sub_header`.`foreignkey`,
  	  	`sta_v_null_sub_header`.`flgprimkey`,
  	  	`sta_v_null_sub_header`.`flgfrgnkey`,
  	  	`sta_v_null_sub_header`.`client`,
  	  	`sta_v_null_sub_header`.`record_no`,
  	  	`sta_v_null_sub_header`.`chngstatus`,
  	  	cast(substring(from_unixtime(unix_timestamp(`sta_v_null_sub_header`.`valid_from`, 'yyyy-MM-dd')),1,10) as DATE) `VALID_FROM`,
  	  	cast(substring(from_unixtime(unix_timestamp(`sta_v_null_sub_header`.`valid_to`, 'MM/dd/yyyy')),1,10) as DATE) `VALID_TO`,
  	  	cast(substring(from_unixtime(unix_timestamp(`sta_v_null_sub_header`.`created_on`, 'MM/dd/yyyy')),1,10) as DATE) `Created_on`,
  	  	`sta_v_null_sub_header`.`chang_no` `chang_no`,
  	  	`sta_v_null_sub_header`.`del_ind` `DEL_IND`,
  	  	`sta_v_null_sub_header`.`park_ind` `PARK_IND`,
  	  	`sta_v_null_sub_header`.`created_by` `CREATED_BY`,
  	  	cast(substring(from_unixtime(unix_timestamp(`sta_v_null_sub_header`.`changd_on`, 'MM/dd/yyyy')),1,10) as DATE) `changd_on`,
  	  	`sta_v_null_sub_header`.`changd_by` `CHANGD_BY`,
  	  	`sta_v_null_sub_header`.`dataorigin` `DATAORIGIN`,
  	  	`sta_v_null_sub_header`.`data_prov` `DATA_PROV`,
  	  	`RECNO_ROOT`,
  	  	cast(substring(from_unixtime(unix_timestamp(`sta_v_null_sub_header`.`sub_chgdon`, 'MM/dd/yyyy')),1,10) as DATE) `SUB_CHGDON`,
  	  	`sta_v_null_sub_header`.`sub_chgdby` `SUB_CHGDBY`,
  	  	`sta_v_null_sub_header`.`substance` `SUBSTANCE`,
  	  	`sta_v_null_sub_header`.`subcategry` `SUBCATEGRY`,
  	  	`sta_v_null_sub_header`.`subauthgrp` `SUBAUTHGRP`,
  	  	`sta_v_null_sub_header`.`note` `NOTE`,
  	  	`sta_v_null_sub_header`.`subcharact` `SUBCHARACT`,
  	  	cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'MM/dd/yyyy')),1,10) as DATE) `COPIED`,
  	  	cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'MM/dd/yyyy')),1,10) as DATE) `inserted`
  	  	from `ehs_null_tables`.`sta_v_null_SUB_HEADER`
  	  	where
  	  	`sta_v_null_sub_header`.`primarykey` is not null and
  	  	`sta_v_null_sub_header`.`record_no` is not null
  	  	and `sta_v_null_sub_header`.`valid_from` is not null
  	  	and `sta_v_null_sub_header`.`record_no` > 0
  	  	and `sta_v_null_sub_header`.`subcategry` is not null;


CREATE view saifty_1_staging.STA_V_SOURCE_SUB_HEADER
as
select distinct
SYSTEM,`FUNCTION`,LOGLOCKMOD,EXTINFO,PRIMARYKEY,FOREIGNKEY,FLGPRIMKEY,FLGFRGNKEY,CLIENT,RECORD_NO,CHNGSTATUS,VALID_FROM,VALID_TO,CHANG_NO,DEL_IND,PARK_IND,CREATED_ON,CREATED_BY,CHANGD_ON,CHANGD_BY,DATAORIGIN,DATA_PROV,RECNO_ROOT,SUB_CHGDON,SUB_CHGDBY,SUBSTANCE,SUBCATEGRY,SUBAUTHGRP,NOTE,SUBCHARACT,INSERTED
COPIED from saifty_1_staging.STA_V_CLEAN_SUB_HEADER;

CREATE view ehs_null_tables.sta_v_null_prop_val
as
select
 nullif( `function`,'')  `function`,
nullif(LOGLOCKMOD,'')  LOGLOCKMOD,
nullif(EXTINFO,'') EXTINFO,
nullif(cast(PRIMARYKEY as string),'') PRIMARYKEY,
nullif(cast(FOREIGNKEY as string),'')  FOREIGNKEY,
nullif(FLGPRIMKEY,'') FLGPRIMKEY,
nullif(FLGFRGNKEY,'') FLGFRGNKEY,
nullif(cast(RECORD_NO as string),'') RECORD_NO,
nullif(CHNGSTATUS, '') CHNGSTATUS,
nullif(CLIENT, '') CLIENT,
nullif(VALID_FROM, '') VALID_FROM,
nullif(VALID_TO, '') VALID_TO,
nullif(CHANG_NO,'') CHANG_NO,
nullif(DEL_IND,'') DEL_IND,
nullif(PARK_IND,'') PARK_IND,
nullif(created_on, '') created_on,
nullif(CREATED_BY, '') CREATED_BY,
nullif(changd_on, '') changd_on,
nullif(CHANGD_BY, '') CHANGD_BY,
nullif(DATAORIGIN, '') DATAORIGIN,
nullif(DATA_PROV, '') DATA_PROV,
nullif(cast(RECNO_ROOT as string),'') RECNO_ROOT,
nullif(cast(REF_RECNVH as string),'') REF_RECNVH,
nullif(cast(sequence as string),'') sequence,
nullif(REFQNTITY, '') REFQNTITY,
nullif(cast(REF_RECNRH as string),'')  REF_RECNRH,

nullif( IS_SOURCE_OF_A_HEREDITY,'')  IS_SOURCE_OF_A_HEREDITY,
nullif(OVERWRITTEN_INHERITED_RECORD,'')  	 OVERWRITTEN_INHERITED_RECORD,
nullif(EXCLUDED_INHERITED_RECORD,'') EXCLUDED_INHERITED_RECORD,
nullif(RECNO_TEMPLATE,'') RECNO_TEMPLATE,
nullif(REF_RECNVA_SOURCE,'') REF_RECNVA_SOURCE,

nullif( REF_RECNVA_ORIGINAL,'')  REF_RECNVA_ORIGINAL,
nullif( RECNO_ROOT_ORIGINAL,'')  RECNO_ROOT_ORIGINAL,
nullif(TEMPLATE_SEQUENCE,'') TEMPLATE_SEQUENCE,
nullif(inserted, '') copied,
nullif(inserted, '') inserted
from ehs_base_tables.prop_val;


CREATE view saifty_1_staging.sta_v_clean_prop_val
as
select
"sys" as SYSTEM,
`function`,
LOGLOCKMOD,
EXTINFO,
PRIMARYKEY,
FOREIGNKEY,
FLGPRIMKEY,
FLGFRGNKEY,
CLIENT,
RECORD_NO,
CHNGSTATUS,
cast(substring(from_unixtime(unix_timestamp(VALID_FROM, 'yyyy-MM-dd')),1,10) as DATE) VALID_FROM,
cast(substring(from_unixtime(unix_timestamp(VALID_TO, 'MM/dd/yyyy')),1,10) as DATE) VALID_TO,
  	  	 CHANG_NO,
  	  	 DEL_IND,
  	  	 PARK_IND,
  	  	cast(substring(from_unixtime(unix_timestamp(Created_on,  'MM/dd/yyyy')),1,10) as DATE) Created_on,
  	  	 CREATED_BY,
  	  	cast(substring(from_unixtime(unix_timestamp(changd_on,  'MM/dd/yyyy')),1,10) as DATE) changd_on,
  	  	 CHANGD_BY,
  	  	 DATAORIGIN,
  	  	 DATA_PROV,
  	  	 RECNO_ROOT,

  	  	 REF_RECNVH,
  	  	SEQUENCE ,
  	  	 REFQNTITY,
  	  	 REF_RECNRH,

  	  	 IS_SOURCE_OF_A_HEREDITY,
  	  	 OVERWRITTEN_INHERITED_RECORD,
  	  	 EXCLUDED_INHERITED_RECORD,
  	  	 RECNO_TEMPLATE,
  	  	 REF_RECNVA_SOURCE,
  	  	 REF_RECNVA_ORIGINAL,
  	  	 RECNO_ROOT_ORIGINAL,
  	  	 TEMPLATE_SEQUENCE,
  	  	cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) COPIED,
		cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) inserted
  	  	from ehs_null_tables.sta_v_null_prop_val
  	  	WHERE
  	  	PRIMARYKEY IS NOT NULL AND
  	  	RECORD_NO IS NOT NULL
  	  	AND VALID_FROM IS NOT NULL;

CREATE VIEW saifty_1_staging.STA_V_SOURCE_PROP_VAL
AS
select distinct
SYSTEM,`FUNCTION`,LOGLOCKMOD,EXTINFO,PRIMARYKEY,FOREIGNKEY,FLGPRIMKEY,FLGFRGNKEY,CLIENT,RECORD_NO,CHNGSTATUS,VALID_FROM,VALID_TO,CHANG_NO,DEL_IND,PARK_IND,CREATED_ON,CREATED_BY,CHANGD_ON,CHANGD_BY,DATAORIGIN,DATA_PROV,RECNO_ROOT,REF_RECNVH,SEQUENCE,REFQNTITY,REF_RECNRH,IS_SOURCE_OF_A_HEREDITY,OVERWRITTEN_INHERITED_RECORD,EXCLUDED_INHERITED_RECORD,RECNO_TEMPLATE,REF_RECNVA_SOURCE,REF_RECNVA_ORIGINAL,RECNO_ROOT_ORIGINAL,TEMPLATE_SEQUENCE,INSERTED
,COPIED
from saifty_1_staging.STA_V_CLEAN_PROP_VAL;



CREATE VIEW ehs_null_tables.sta_v_null_PROP_HEADER
as
select
nullif(`function`, '') `function`,
nullif(LOGLOCKMOD, '') LOGLOCKMOD,
nullif(EXTINFO, '') EXTINFO,
cast(nullif(cast(PRIMARYKEY as string),'')as int) PRIMARYKEY,
cast(nullif(cast(FOREIGNKEY as string),'')as int) FOREIGNKEY,
cast(nullif(cast( FLGPRIMKEY as string),'')as int)  FLGPRIMKEY,
cast(nullif(cast(FLGFRGNKEY as string),'')as int) FLGFRGNKEY,
nullif(CLIENT , '') CLIENT,
cast(nullif(cast(RECORD_NO as string),'')as int) RECORD_NO,
nullif(CHNGSTATUS , '') CHNGSTATUS,
nullif(VALID_FROM , '') VALID_FROM,
nullif(VALID_TO , '') VALID_TO,
nullif(chang_no, '') chang_no,
nullif(DEL_IND, '') DEL_IND,
nullif(PARK_IND , '') PARK_IND ,
nullif(created_on, '') created_on,
nullif(CREATED_BY, '') CREATED_BY,
nullif(changd_on, '') changd_on,
nullif(CHANGD_BY, '') CHANGD_BY,
nullif(DATAORIGIN, '') DATAORIGIN,
nullif(DATA_PROV , '') DATA_PROV ,
cast(nullif(cast(RECNO_ROOT as string),'')as int) RECNO_ROOT,
nullif(subchacat, '') subchacat,
nullif(auxcounter, '') auxcounter,
nullif(ref_recnrh, '') ref_recnrh,
nullif(inserted , '') inserted
from ehs_base_tables.PROP_HEADER;

 CREATE VIEW saifty_1_staging.STA_V_CLEAN_PROP_HEADER
AS
 select
"sys" as SYSTEM,
`function`,
LOGLOCKMOD,
EXTINFO EXTINFO,
PRIMARYKEY,
FOREIGNKEY,
FLGPRIMKEY,
FLGFRGNKEY,
CLIENT,
RECORD_NO,
CHNGSTATUS,
cast(substring(from_unixtime(unix_timestamp(VALID_FROM, 'yyyy-MM-dd')),1,10) as DATE) VALID_FROM,
cast(substring(from_unixtime(unix_timestamp(VALID_TO, 'MM/dd/yyyy')),1,10) as DATE) VALID_TO,
CHANG_NO,
DEL_IND,
PARK_IND,
cast(substring(from_unixtime(unix_timestamp(Created_on,  'MM/dd/yyyy')),1,10) as DATE) Created_on,
CREATED_BY,
cast(substring(from_unixtime(unix_timestamp(changd_on,  'MM/dd/yyyy')),1,10) as DATE) changd_on,
CHANGD_BY,
DATAORIGIN,
DATA_PROV,
RECNO_ROOT,
subchacat,
AUXCOUNTER,
REF_RECNRH,
cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) COPIED,
cast(substring(from_unixtime(unix_timestamp(CURRENT_DATE, 'yyyy-MM-dd')),1,10) as DATE) inserted
from ehs_null_tables.sta_v_null_PROP_HEADER
where
PRIMARYKEY IS NOT NULL AND
RECORD_NO IS NOT NULL
AND VALID_FROM IS NOT NULL;

CREATE VIEW saifty_1_staging.STA_V_SOURCE_PROP_HEADER
AS
select distinct
SYSTEM,`FUNCTION`,LOGLOCKMOD,EXTINFO,PRIMARYKEY,FOREIGNKEY,FLGPRIMKEY,FLGFRGNKEY,CLIENT,RECORD_NO,CHNGSTATUS,VALID_FROM,VALID_TO,CHANG_NO,DEL_IND,PARK_IND,CREATED_ON,
CREATED_BY,
CHANGD_ON,
CHANGD_BY,
DATAORIGIN,
DATA_PROV,RECNO_ROOT,SUBCHACAT,AUXCOUNTER,REF_RECNRH,INSERTED
COPIED
from saifty_1_staging.STA_V_CLEAN_PROP_HEADER;

CREATE VIEW saifty_1_staging.STA_V_TMP_PROP_VAL
AS
SELECT SH.SYSTEM       SUHE_SYSTEM,
        SH.CREATED_ON SUHE_CREATED_ON,
        SH.CREATED_BY SUHE_CREATED_BY,
        SH.CHANGD_ON SUHE_CHANGD_ON,
        SH.CHANGD_BY SUHE_CHANGD_BY,
        SH.DATAORIGIN SUHE_DATAORIGIN,
        sh.`FUNCTION`   SUHE_FUNCTION,
        sh.RECORD_NO    SUHE_RECORD_NO,
        SH.VALID_FROM   SUHE_VALID_FROM,
        sh.VALID_TO     SUHE_VALID_TO,
        SH.CHANG_NO     SUHE_CHANG_NO,
        sh.DEL_IND      SUHE_DEL_IND,
        SH.RECNO_ROOT   SUHE_RECNO_ROOT,
        sh.SUBSTANCE    SUHE_SUBSTANCE,
        SH.SUBCATEGRY   SUHE_SUBCATEGRY,
        SH.COPIED       SUHE_COPIED,
        ph.RECORD_NO PRHE_RECORD_NO,
        PH.SUBCHACAT PRHE_SUBCHACAT,
        ph.VALID_FROM PRHE_VALID_FROM,
        ph.VALID_TO PRHE_VALID_TO,
        ph.CHANG_NO PRHE_CHANG_NO,
        ph.DEL_IND PRHE_DEL_IND,
        ph.REF_RECNRH PRHE_REF_RECNRH,
        ph.COPIED PRHE_COPIED,
        pv.RECORD_NO PRVA_RECORD_NO,
        pv.CHNGSTATUS PRVA_CHNGSTATUS,
        pv.VALID_FROM PRVA_VALID_FROM,
        pv.VALID_TO PRVA_VALID_TO,
        pv.CHANG_NO PRVA_CHANG_NO,
        pv.DEL_IND PRVA_DEL_IND,
        pv.PARK_IND PRVA_PARK_IND,
        pv.CREATED_ON PRVA_CREATED_ON,
        pv.CREATED_BY PRVA_CREATED_BY,
        pv.CHANGD_ON PRVA_CHANGD_ON,
        pv.CHANGD_BY PRVA_CHANGD_BY,
        pv.DATAORIGIN PRVA_DATAORIGIN,
        pv.DATA_PROV PRVA_DATA_PROV,
        pv.RECNO_ROOT PRVA_RECNO_ROOT,
        pv.REF_RECNVH PRVA_REF_RECNVH,
        pv.SEQUENCE PRVA_SEQUENCE,
        pv.REFQNTITY PRVA_REFQNTITY,
        pv.REF_RECNRH PRVA_REF_RECNRH,
        pv.IS_SOURCE_OF_A_HEREDITY PRVA_IS_SOURCE_OF_A_HEREDITY,
        pv.OVERWRITTEN_INHERITED_RECORD PRVA_OVERWRITTEN_INHERITED_REC,
        pv.EXCLUDED_INHERITED_RECORD PRVA_EXCLUDED_INHERITED_RECORD,
        pv.RECNO_TEMPLATE PRVA_RECNO_TEMPLATE,
        pv.REF_RECNVA_SOURCE PRVA_REF_RECNVA_SOURCE,
        pv.REF_RECNVA_ORIGINAL PRVA_REF_RECNVA_ORIGINAL,
        pv.RECNO_ROOT_ORIGINAL PRVA_RECNO_ROOT_ORIGINAL,
        pv.TEMPLATE_SEQUENCE PRVA_TEMPLATE_SEQUENCE
FROM saifty_1_staging.STA_V_SOURCE_SUB_HEADER SH
  INNER JOIN saifty_1_staging.STA_V_SOURCE_PROP_HEADER PH
  on(sh.record_no = ph.recno_root /*and sh.system = ph.system*/)
  INNER JOIN saifty_1_staging.STA_V_SOURCE_PROP_VAL PV
    on(ph.record_no = pv.ref_recnvh and sh.record_no = pv.recno_root /*and sh.system = pv.system and ph.system = pv.system*/);

CREATE VIEW saifty_1_staging.STA_V_LOGIC_PROPERTIES
  AS
 SELECT
            tmpv.SUHE_SYSTEM,
            tmpv.SUHE_FUNCTION,
            tmpv.SUHE_RECORD_NO,
            tmpv.SUHE_VALID_FROM,
            tmpv.SUHE_VALID_TO,
            tmpv.SUHE_CHANG_NO,
            tmpv.SUHE_DEL_IND,
            tmpv.SUHE_RECNO_ROOT,
            tmpv.SUHE_SUBSTANCE,
            tmpv.SUHE_SUBCATEGRY,
            tmpv.SUHE_COPIED,
            tmpv.PRHE_SUBCHACAT,
            tmpv.PRHE_RECORD_NO,
            tmpv.PRHE_VALID_FROM,
            tmpv.PRHE_VALID_TO,
            tmpv.PRHE_CHANG_NO,
            tmpv.PRHE_DEL_IND,
            tmpv.PRHE_REF_RECNRH,
            tmpv.PRHE_COPIED,
            tmpv.PRVA_RECORD_NO,
            tmpv.PRVA_CHNGSTATUS,
            tmpv.PRVA_VALID_FROM,
            tmpv.PRVA_VALID_TO,
            tmpv.PRVA_CHANG_NO,
            tmpv.PRVA_DEL_IND,
            tmpv.PRVA_PARK_IND,
            tmpv.PRVA_CREATED_ON,
            tmpv.PRVA_CREATED_BY,
            tmpv.PRVA_CHANGD_ON,
            tmpv.PRVA_CHANGD_BY,
            tmpv.PRVA_DATAORIGIN,
            tmpv.PRVA_DATA_PROV,
            tmpv.PRVA_RECNO_ROOT,
            tmpv.PRVA_REF_RECNVH,
            tmpv.PRVA_SEQUENCE,
            tmpv.PRVA_REFQNTITY,
            tmpv.PRVA_REF_RECNRH,
            tmpv.PRVA_IS_SOURCE_OF_A_HEREDITY,
            tmpv.PRVA_OVERWRITTEN_INHERITED_REC,
            tmpv.PRVA_EXCLUDED_INHERITED_RECORD,
            tmpv.PRVA_RECNO_TEMPLATE,
            tmpv.PRVA_REF_RECNVA_SOURCE,
            tmpv.PRVA_REF_RECNVA_ORIGINAL,
            tmpv.PRVA_RECNO_ROOT_ORIGINAL,
            tmpv.PRVA_TEMPLATE_SEQUENCE,
            pd.OBJ_TYPE PRDA_OBJ_TYPE,
            pd.OBJ_KEY PRDA_OBJ_KEY,
            pd.INT_CHAR PRDA_INT_CHAR,
            pd.NAME_CHAR PRDA_NAME_CHAR,
            pd.DESCR_CHAR PRDA_DESCR_CHAR,
            pd.COUNTER PRDA_COUNTER,
            pd.CHAR_VALUE PRDA_CHAR_VALUE,
            pd.DESCR_CVAL PRDA_DESCR_CVAL,
            pd.NUM_VAL_FM PRDA_NUM_VAL_FM,
            pd.MEAS_UNIT1 PRDA_MEAS_UNIT1,
            pd.ISOCODE1 PRDA_ISOCODE1,
            pd.NUM_VAL_TO PRDA_NUM_VAL_TO,
            pd.MEAS_UNIT2 PRDA_MEAS_UNIT2,
            pd.ISOCODE2 PRDA_ISOCODE2,
            pd.VAL_RELATN PRDA_VAL_RELATN,
            pd.TOLER_FROM PRDA_TOLER_FROM,
            pd.TOLER_TO PRDA_TOLER_TO,
            pd.PERCENTAGE PRDA_PERCENTAGE,
            pd.OPER_INC PRDA_OPER_INC,
            pd.ALLOC_NO PRDA_ALLOC_NO,
            pd.DOC_TYPE PRDA_DOC_TYPE,
            pd.DOC_NUMBER PRDA_DOC_NUMBER,
            pd.DOC_VER PRDA_DOC_VER,
            pd.DOC_PART PRDA_DOC_PART,
            pd.SUB_VALUES PRDA_SUB_VALUES,
            pd.SORT_FIELD PRDA_SORT_FIELD,
            pd.RECNO_ROOT PRDA_RECNO_ROOT,
            pd.REF_RECNRH PRDA_REF_RECNRH,
            pd.FLAG PRDA_FLAG,
            pd.REF_RECNPH PRDA_REF_RECNPH,
            pd.FLG_VALFIX_DESCR PRDA_FLG_VALFIX_DESCR,
            PD.COPIED PRDA_COPIED,
            pu.RECORD_NO PRUS_RECORD_NO,
            pu.CHNGSTATUS PRUS_CHNGSTATUS,
            pu.VALID_FROM PRUS_VALID_FROM,
            pu.VALID_TO PRUS_VALID_TO,
            pu.CHANG_NO PRUS_CHANG_NO,
            pu.DEL_IND PRUS_DEL_IND,
            pu.PARK_IND PRUS_PARK_IND,
            pu.CREATED_ON PRUS_CREATED_ON,
            pu.CREATED_BY PRUS_CREATED_BY,
            pu.CHANGD_ON PRUS_CHANGD_ON,
            pu.CHANGD_BY PRUS_CHANGD_BY,
            pu.RECNO_ROOT PRUS_RECNO_ROOT,
            pu.MASTERTABL PRUS_MASTERTABL,
            pu.REF_RECN PRUS_REF_RECN,
            pu.DATAORIGIN PRUS_DATAORIGIN,
            pu.RATING PRUS_RATING,
            pu.VAL_AREA PRUS_VAL_AREA,
            pu.EXCL_IND PRUS_EXCL_IND,
            pu.ACT_IND PRUS_ACT_IND,
            pu.REL_IND PRUS_REL_IND,
            pu.REF_RECNRH PRUS_REF_RECNRH,
            PU.COPIED PRUS_COPIED
FROM saifty_1_staging.STA_V_TMP_PROP_VAL TMPV
    INNER JOIN saifty_1_staging.STA_V_SOURCE_PROP_DATA PD
      ON(tmpv.PRVA_RECORD_NO = PD.OBJ_KEY and /*tmpv.SUHE_SYSTEM = pd.system and*/  tmpv.SUHE_RECORD_NO = pd.recno_root and tmpv.SUHE_SYSTEM = pd.system)

      INNER JOIN saifty_1_staging.STA_V_SOURCE_PROP_USAGE PU
        ON(tmpv.PRVA_RECORD_NO = PU.REF_RECN /*AND tmpv.SUHE_SYSTEM = PU.SYSTEM*/ and tmpv.SUHE_RECORD_NO = pu.RECNO_ROOT and tmpv.SUHE_SYSTEM = pu.system);

drop table saifty_1_staging.STA_USE_PROPERTIES;

CREATE view saifty_1_staging.STA_V_USE_PROPERTIES
  AS
  SELECT DISTINCT
            substr(SUHE_SYSTEM, 1, 3) SYSTEM,
            SUHE_RECORD_NO SUB_RECORD_NO,
            PRHE_SUBCHACAT SUBCHACAT,
            PRVA_RECORD_NO || PRDA_INT_CHAR VAL_RECORD_NO,
            PRVA_CREATED_ON CREATED_ON,
            PRVA_CREATED_BY CREATED_BY,
            PRVA_CHANGD_ON CHANGD_ON,
            PRVA_CHANGD_BY CHANGD_BY,
            PRVA_SEQUENCE SEQUENCE,
            PRVA_REFQNTITY REFQNTITY,
            PRVA_IS_SOURCE_OF_A_HEREDITY IS_SOURCE_OF_A_HEREDITY,
            PRVA_OVERWRITTEN_INHERITED_REC OVERWRITTEN_INHERITED_REC,
            PRVA_EXCLUDED_INHERITED_RECORD EXCLUDED_INHERITED_RECORD,
            PRVA_RECNO_TEMPLATE RECNO_TEMPLATE,
            PRVA_REF_RECNVA_SOURCE REF_RECNVA_SOURCE,
            PRVA_REF_RECNVA_ORIGINAL REF_RECNVA_ORIGINAL,
            PRVA_RECNO_ROOT_ORIGINAL RECNO_ROOT_ORIGINAL,
            PRVA_TEMPLATE_SEQUENCE TEMPLATE_SEQUENCE,
            PRDA_OBJ_TYPE OBJ_TYPE,
            PRDA_NAME_CHAR NAME_CHAR,
            PRDA_DESCR_CHAR DESCR_CHAR,
            PRDA_COUNTER COUNTER,
            PRDA_CHAR_VALUE CHAR_VALUE,
            PRDA_DESCR_CVAL DESCR_CVAL,
            PRDA_NUM_VAL_FM NUM_VAL_FM,
            PRDA_MEAS_UNIT1 MEAS_UNIT1,
            PRDA_ISOCODE1 ISOCODE1,
            PRDA_NUM_VAL_TO NUM_VAL_TO,
            PRDA_MEAS_UNIT2 MEAS_UNIT2,
            PRDA_ISOCODE2 ISOCODE2,
            PRDA_VAL_RELATN VAL_RELATN,
            PRDA_TOLER_FROM TOLER_FROM,
            PRDA_TOLER_TO TOLER_TO,
            PRDA_PERCENTAGE PERCENTAGE,
            PRDA_OPER_INC OPER_INC,
            PRDA_ALLOC_NO ALLOC_NO,
            PRDA_DOC_TYPE DOC_TYPE,
            PRDA_DOC_NUMBER DOC_NUMBER,
            PRDA_DOC_VER DOC_VER,
            PRDA_DOC_PART DOC_PART,
            PRDA_SUB_VALUES SUB_VALUES,
            PRDA_SORT_FIELD SORT_FIELD,
            PRDA_FLAG FLAG,
            PRDA_FLG_VALFIX_DESCR FLG_VALFIX_DESCR,
            PRDA_COPIED COPIED,
            PRUS_DATAORIGIN DATAORIGIN,
            PRUS_RATING RATING,
            PRUS_VAL_AREA VAL_AREA,
            PRUS_EXCL_IND EXCL_IND,
            PRUS_ACT_IND ACT_IND,
            PRUS_REL_IND REL_IND
FROM saifty_1_staging.STA_V_LOGIC_PROPERTIES;

create table saifty_1_staging.STA_USE_PROPERTIES
as
select * from saifty_1_staging.STA_V_USE_PROPERTIES;




drop view ehs_null_tables.sta_v_null_prop_header;
drop view saifty_1_staging.STA_V_CLEAN_prop_header;
drop view saifty_1_staging.STA_V_SOURCE_prop_header;
drop view ehs_null_tables.sta_v_null_prop_data;
drop view saifty_1_staging.STA_V_CLEAN_prop_data;
drop view saifty_1_staging.STA_V_SOURCE_prop_data;
drop view ehs_null_tables.sta_v_null_sub_header;
drop view saifty_1_staging.STA_V_CLEAN_SUB_HEADER;
drop view saifty_1_staging.STA_V_SOURCE_SUB_HEADER;
drop view ehs_null_tables.sta_v_null_PROP_VAL;
drop view saifty_1_staging.STA_V_CLEAN_PROP_VAL;
drop view saifty_1_staging.STA_V_SOURCE_PROP_VAL;
drop view saifty_1_staging.STA_V_TMP_PROP_VAL;
drop view ehs_null_tables.sta_v_null_prop_usage;
drop view saifty_1_staging.sta_v_clean_prop_usage;
drop view saifty_1_staging.STA_V_SOURCE_PROP_USAGE;
drop view saifty_1_staging.STA_V_LOGIC_PROPERTIES;
drop view saifty_1_staging.STA_V_USE_PROPERTIES
